[{"title":"写论文神器:LaTex+VSCode","path":"/2023/09/01/写论文神器-LaTex-VSCode/","content":"前言：VSCode是一款杰出的代码编辑器，不论从代码高亮，自动补全上来讲，都是相当不错的;而LaTeX是一种强大的文档编辑系统，尤其适用于学术写作和科学研究领域，其专业外观、数学公式支持、参考文献管理和版本控制等特点使其成为许多研究人员和学术界从业者的首选工具。本文提供了一份简洁的指南，教您如何在VSCode中使用Latex。 但是安装latex到本地使用VSCode编辑是比较费劲的，不愿意折腾又想要体验Latex的可以使用在线编辑Latex的网站——Oerleaf 下面正式开始Latex的安装 1.安装环境安装环境配置：texlive，texlive环境集成的包是最多的，也是目前比较主流的环境 1.1 下载Tex Live进入Tex Live官网：https://www.tug.org/texlive/，长这样： 在选择系统中，选择第一个链接 由于我使用的是ubuntu系统，所以只介绍linux安装操作，其他系统可以自行查看官方文档 例如：windows可以在线下载或者iso镜像下载，速度比较快清华镜像和中科大镜像 注意：最小空间为7G 1.2 配置Tex Live 新建文件夹，在文件夹中运行以下命令 12345cd /xxx #代表进入到你的安装目录，直接在你安装的文件夹中右键选择“在终端打开”就好，cd命令可省略wget https://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz # 或者用curl代替wgetzcat &lt; install-tl-unx.tar.gz | tar xf -cd install-tl-* #进入到解压后的文件夹内，*是你的文件夹名称后的一串数字sudo perl ./install-tl --no-interaction # 使用root用户 执行成功之后的界面： 把路径添加到PATH中注意文件的位置，不是在主目录，是在“计算机”目录 12sudo /usr/local/textlive/2023/bin/x86_64-linux/tlmgr path add# 验证是否安装配置成功：在命令行输入 tex --version ，显示tex版本信息说明配置成功 2.配置VSCode2.1 下载VSCode，官网链接选择适合自己电脑的版本点击下载安装官网下载速度可能有些慢（需要梯子)。可自行百度其他下载方法。 2.2 安装VSCode中的Latex插件Latex Workshop若是第一次安装VSCode则需要先安装chinese中文插件 在扩展中搜索即可。扩展安装后重新启动VSCode 2.3 配置json文件 进入VSCode的设置，按图中的步骤： 点击图标进入settings.json 3.在json文件中添加如下代码：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141&#123; // 设置是否自动编译 &quot;latex-workshop.latex.autoBuild.run&quot;:&quot;never&quot;, //右键菜单 &quot;latex-workshop.showContextMenu&quot;:true, //从使用的包中自动补全命令和环境 &quot;latex-workshop.intellisense.package.enabled&quot;: true, //编译出错时设置是否弹出气泡设置 &quot;latex-workshop.message.error.show&quot;: false, &quot;latex-workshop.message.warning.show&quot;: false, // 编译工具和命令 &quot;latex-workshop.latex.tools&quot;: [ &#123; &quot;name&quot;: &quot;xelatex&quot;, &quot;command&quot;: &quot;xelatex&quot;, &quot;args&quot;: [ &quot;-synctex=1&quot;, &quot;-interaction=nonstopmode&quot;, &quot;-file-line-error&quot;, &quot;%DOCFILE%&quot; ] &#125;, &#123; &quot;name&quot;: &quot;pdflatex&quot;, &quot;command&quot;: &quot;pdflatex&quot;, &quot;args&quot;: [ &quot;-synctex=1&quot;, &quot;-interaction=nonstopmode&quot;, &quot;-file-line-error&quot;, &quot;%DOCFILE%&quot; ] &#125;, &#123; &quot;name&quot;: &quot;latexmk&quot;, &quot;command&quot;: &quot;latexmk&quot;, &quot;args&quot;: [ &quot;-synctex=1&quot;, &quot;-interaction=nonstopmode&quot;, &quot;-file-line-error&quot;, &quot;-pdf&quot;, &quot;-outdir=%OUTDIR%&quot;, &quot;%DOCFILE%&quot; ] &#125;, &#123; &quot;name&quot;: &quot;bibtex&quot;, &quot;command&quot;: &quot;bibtex&quot;, &quot;args&quot;: [ &quot;%DOCFILE%&quot; ] &#125; ], // 用于配置编译链 &quot;latex-workshop.latex.recipes&quot;: [ &#123; &quot;name&quot;: &quot;XeLaTeX&quot;, &quot;tools&quot;: [ &quot;xelatex&quot; ] &#125;, &#123; &quot;name&quot;: &quot;XeLaTeX*2&quot;, &quot;tools&quot;: [ &quot;xelatex&quot;, &quot;xelatex&quot; ] &#125;, &#123; &quot;name&quot;: &quot;PDFLaTeX&quot;, &quot;tools&quot;: [ &quot;pdflatex&quot; ] &#125;, &#123; &quot;name&quot;: &quot;PDFLaTeX*2&quot;, &quot;tools&quot;: [ &quot;pdflatex&quot;, &quot;pdflatex&quot; ] &#125;, &#123; &quot;name&quot;: &quot;BibTeX&quot;, &quot;tools&quot;: [ &quot;bibtex&quot; ] &#125;, &#123; &quot;name&quot;: &quot;LaTeXmk&quot;, &quot;tools&quot;: [ &quot;latexmk&quot; ] &#125;, &#123; &quot;name&quot;: &quot;xelatex -&gt; bibtex -&gt; xelatex*2&quot;, &quot;tools&quot;: [ &quot;xelatex&quot;, &quot;bibtex&quot;, &quot;xelatex&quot;, &quot;xelatex&quot; ] &#125;, &#123; &quot;name&quot;: &quot;pdflatex -&gt; bibtex -&gt; pdflatex*2&quot;, &quot;tools&quot;: [ &quot;pdflatex&quot;, &quot;bibtex&quot;, &quot;pdflatex&quot;, &quot;pdflatex&quot; ] &#125; ], //文件清理。此属性必须是字符串数组 &quot;latex-workshop.latex.clean.fileTypes&quot;: [ //&quot;*.aux&quot;, &quot;*.bbl&quot;, &quot;*.blg&quot;, &quot;*.idx&quot;, &quot;*.ind&quot;, &quot;*.lof&quot;, &quot;*.lot&quot;, //&quot;*.out&quot;, &quot;*.toc&quot;, &quot;*.acn&quot;, &quot;*.acr&quot;, &quot;*.alg&quot;, &quot;*.glg&quot;, &quot;*.glo&quot;, &quot;*.gls&quot;, &quot;*.ist&quot;, &quot;*.fls&quot;, &quot;*.log&quot;, &quot;*.fdb_latexmk&quot; ], //设置为onFaild 在构建失败后清除辅助文件 &quot;latex-workshop.latex.autoClean.run&quot;: &quot;onFailed&quot;, // 使用上次的recipe编译组合 &quot;latex-workshop.latex.recipe.default&quot;: &quot;lastUsed&quot;, // 用于反向同步的内部查看器的键绑定。ctrl/cmd +点击(默认)或双击 &quot;latex-workshop.view.pdf.internal.synctex.keybinding&quot;: &quot;double-click&quot;, &quot;latex-workshop.view.pdf.viewer&quot;: &quot;tab&quot;,&#125; 3. 测试配置是否成功在VSCode中新建一个test.tex文件，编写以下代码： 1234\\documentclass&#123;ctexart&#125;\\begin&#123;document&#125; \\LaTeX\\end&#123;document&#125; 点击这两个其中一个，则可以在VSCode编辑区右侧生成一个pdf预览窗口 若点击这两个的其中一个则是编译生成pdf 倘若碰到无法编译的问题则重新安装一下Latex-Workshop插件 成功预览示例：","tags":["工具","VSCode","LaTex"],"categories":["学术","论文"]},{"title":"PicGo+VSCode+Github","path":"/2023/08/30/PicGo-VSCode-Github/","content":"VSCode 中有一个插件 PicGo 还算好用，可以一键将图片上传然后将链接粘贴到 Markdown 中。 写博客的时候直接把 Markdown 的相对地址贴在对应项目里，然后通过相对链接访问，使用的时候发现一些问题： 项目的相对路径未必是上传后的真实路径，导致每次都要手动编辑地址。比如我的 Blog 中的上传图片的地址是 &#x2F;public&#x2F;image，但 public 到了发布时会被 copy 到根路径，此时自动生成的相对地址就不匹配了。 于是使用 PicGo 中提供的图床功能将图片放到 GitHub 图床就不用担心图片链接错误了。 1 在Github中新建一个仓库来作为图床1.1 创建仓库 仓库名称自定义，一定要选择公开仓库。 1.2 设置token，保留后续使用 进入github设置，点击左侧选项中最后一个 Developer settings 之后选择Personal access tokens下拉菜单中的Tokens Generate new token(classic) 填写note，选择过期时间，可以选择最后一项，永久有效。下方选项框，只需要勾选repo 点击页面下方的Generate token 生成一串token，注意token只会显示一次，复制下来记到备忘录 2 VSCode中配置PiCgo插件2.1 下载Picgo插件 点击安装即可 2.2 设置Picgo 下拉找到Github相关的设置，只需要填写这一部分即可 Current选择Github Branch分支一般默认就填main Custom Url是图片的访问地址，不填为默认地址，不过github在国内被墙，默认地址需要开梯子才能访问到。这里使用cdn加速，填写https://cdn.jsdelivr.net/gh/你的github用户名/仓库名 Path是仓库中的文件夹名 Repo填你的用户名&#x2F;仓库名 最后Token填写上面我们复制的Token至此，所有配置都已完成 3 完成测试可以截图在VSCode中用快捷键“Ctrl+Alt+U”来测试是否成功配置没出错上传图片会弹出如下提示","tags":["PicGo","Github","VSCode"],"categories":["折腾","图床"]},{"title":"the first test","path":"/2023/08/30/the-first-test/","content":"这是第一个测试文档诗词模块游山西村陆游莫笑农家腊酒浑，丰年留客足鸡豚。山重水复疑无路，柳暗花明又一村。箫鼓追随春社近，衣冠简朴古风存。从今若许闲乘月，拄杖无时夜叩门。诗词节选 表情包演示","tags":["测试"],"categories":["我的文档","测试使用"]},{"title":"Hello World","path":"/2023/08/29/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"}]